<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Vim Plug-in | 使用 Vim</title>
    <link href="/2023/05/24/Vim-Plug-in-%E4%BD%BF%E7%94%A8-Vim/"/>
    <url>/2023/05/24/Vim-Plug-in-%E4%BD%BF%E7%94%A8-Vim/</url>
    
    <content type="html"><![CDATA[<h1 id="Vim-Plug-in"><a href="#Vim-Plug-in" class="headerlink" title="Vim Plug-in"></a>Vim Plug-in</h1><p>Vim is a powerful text editor. We can turn Vim into a lightweight IDE by installing and configuring a range of useful plug-ins.</p><p>Install vim-plug to manage all of your plug-ins. Here is the doc: <a href="https://github.com/junegunn/vim-plug">vim-plug</a></p><p>if <code>backspace</code> not works properly, add codes below to <code>~/.vimrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># set nocompatible</span><br><span class="hljs-built_in">set</span> backspace=indent,eol,start<br></code></pre></td></tr></table></figure><p>Than <code>vim ~/.vimrc</code>, add plug-ins and configurations to the file.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">set</span> <span class="hljs-keyword">number</span><br><br><span class="hljs-keyword">call</span> plug#begin(<span class="hljs-string">&#x27;~/.vim/plugged&#x27;</span>)<br><br><span class="hljs-comment">&quot; style</span><br>Plug <span class="hljs-string">&#x27;mhinz/vim-startify&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline-themes&#x27;</span><br><br><span class="hljs-comment">&quot; auto-complete</span><br>Plug <span class="hljs-string">&#x27;neoclide/coc.nvim&#x27;</span>, &#123;<span class="hljs-string">&#x27;branch&#x27;</span>: <span class="hljs-string">&#x27;release&#x27;</span>&#125;<br>Plug <span class="hljs-string">&#x27;jiangmiao/auto-pairs&#x27;</span><br>Plug <span class="hljs-string">&#x27;junegunn/vim-easy-align&#x27;</span><br><br><span class="hljs-comment">&quot; On-demand loading</span><br>Plug <span class="hljs-string">&#x27;preservim/nerdtree&#x27;</span>, &#123; <span class="hljs-string">&#x27;on&#x27;</span>: <span class="hljs-string">&#x27;NERDTreeToggle&#x27;</span> &#125;<br>Plug <span class="hljs-string">&#x27;preservim/nerdcommenter&#x27;</span><br>Plug <span class="hljs-string">&#x27;yggdroot/indentline&#x27;</span><br><span class="hljs-keyword">call</span> plug#end()<br><span class="hljs-comment">&quot; You can revert the settings after the call like so:</span><br><span class="hljs-string">&quot;   filetype indent off   &quot;</span> Disable <span class="hljs-keyword">file</span>-<span class="hljs-built_in">type</span>-specific indentation<br><span class="hljs-string">&quot;   syntax off            &quot;</span> Disable <span class="hljs-keyword">syntax</span> highlighting<br><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;F3&gt;</span> :NERDTreeMirror<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;F3&gt;</span> :NERDTreeToggle<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">set</span> encoding=utf-<span class="hljs-number">8</span><br><span class="hljs-keyword">set</span> nobackup<br><span class="hljs-keyword">set</span> nowritebackup<br><span class="hljs-keyword">set</span> updatetime=<span class="hljs-number">300</span><br><span class="hljs-keyword">set</span> signcolumn=yes<br><br><span class="hljs-comment">&quot; coc.nvim</span><br><span class="hljs-comment">&quot; Use tab for trigger completion with characters ahead and navigate</span><br><span class="hljs-comment">&quot; <span class="hljs-doctag">NOTE:</span> There&#x27;s always complete item selected by default, you may want to enable</span><br><span class="hljs-string">&quot; no select by `&quot;</span>suggest.noselect<span class="hljs-comment">&quot;: true` in your configuration file</span><br><span class="hljs-comment">&quot; <span class="hljs-doctag">NOTE:</span> Use command &#x27;:verbose imap &lt;tab&gt;&#x27; to make sure tab is not mapped by</span><br><span class="hljs-comment">&quot; other plugin before putting this into your config</span><br><span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;TAB&gt;</span><br>      \ coc#pum#visible() ? coc#pum#next(<span class="hljs-number">1</span>) :<br>      \ CheckBackspace() ? <span class="hljs-string">&quot;\&lt;Tab&gt;&quot;</span> :<br>      \ coc#refresh()<br><span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;expr&gt;</span><span class="hljs-symbol">&lt;S-TAB&gt;</span> coc#pum#visible() ? coc#pum#prev(<span class="hljs-number">1</span>) : <span class="hljs-string">&quot;\&lt;C-h&gt;&quot;</span><br><br><span class="hljs-comment">&quot; Make &lt;CR&gt; to accept selected completion item or notify coc.nvim to format</span><br><span class="hljs-comment">&quot; &lt;C-g&gt;u breaks current undo, please make your own choice</span><br><span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;CR&gt;</span> coc#pum#visible() ? coc#pum#confirm()<br>                              \: <span class="hljs-string">&quot;\&lt;C-g&gt;u\&lt;CR&gt;\&lt;c-r&gt;=coc#on_enter()\&lt;CR&gt;&quot;</span><br><br><span class="hljs-keyword">function!</span> <span class="hljs-title">CheckBackspace</span><span class="hljs-params">()</span> abort<br>  <span class="hljs-keyword">let</span> <span class="hljs-keyword">col</span> = <span class="hljs-keyword">col</span>(<span class="hljs-string">&#x27;.&#x27;</span>) - <span class="hljs-number">1</span><br>  <span class="hljs-keyword">return</span> !col || <span class="hljs-built_in">getline</span>(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-keyword">col</span> - <span class="hljs-number">1</span>]  =~# <span class="hljs-string">&#x27;\s&#x27;</span><br><span class="hljs-keyword">endfunction</span><br><br><span class="hljs-comment">&quot; Use &lt;c-space&gt; to trigger completion</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">has</span>(<span class="hljs-string">&#x27;nvim&#x27;</span>)<br>  <span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;c-space&gt;</span> coc#refresh()<br><span class="hljs-keyword">else</span><br>  <span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> &lt;<span class="hljs-keyword">c</span>-@&gt; coc#refresh()<br><span class="hljs-keyword">endif</span><br><br><span class="hljs-comment">&quot; Use `[g` and `]g` to navigate diagnostics</span><br><span class="hljs-comment">&quot; Use `:CocDiagnostics` to get all diagnostics of current buffer in location list</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> [g <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-diagnostic-<span class="hljs-keyword">prev</span>)<br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> ]g <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-diagnostic-<span class="hljs-keyword">next</span>)<br><br><span class="hljs-comment">&quot; GoTo code navigation</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> gd <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-definition)<br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> gy <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-<span class="hljs-built_in">type</span>-definition)<br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> gi <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-implementation)<br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> <span class="hljs-keyword">gr</span> <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-references)<br><br><span class="hljs-comment">&quot; Use K to show documentation in preview window</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span> K :<span class="hljs-keyword">call</span> ShowDocumentation()<span class="hljs-symbol">&lt;CR&gt;</span><br><br><span class="hljs-keyword">function!</span> <span class="hljs-title">ShowDocumentation</span><span class="hljs-params">()</span><br>  <span class="hljs-keyword">if</span> CocAction(<span class="hljs-string">&#x27;hasProvider&#x27;</span>, <span class="hljs-string">&#x27;hover&#x27;</span>)<br>    <span class="hljs-keyword">call</span> CocActionAsync(<span class="hljs-string">&#x27;doHover&#x27;</span>)<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">call</span> <span class="hljs-built_in">feedkeys</span>(<span class="hljs-string">&#x27;K&#x27;</span>, <span class="hljs-string">&#x27;in&#x27;</span>)<br>  <span class="hljs-keyword">endif</span><br><span class="hljs-keyword">endfunction</span><br><br><span class="hljs-comment">&quot; Highlight the symbol and its references when holding the cursor</span><br><span class="hljs-keyword">autocmd</span> CursorHold * <span class="hljs-keyword">silent</span> <span class="hljs-keyword">call</span> CocActionAsync(<span class="hljs-string">&#x27;highlight&#x27;</span>)<br><br><span class="hljs-comment">&quot; Symbol renaming</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;leader&gt;</span>rn <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-<span class="hljs-built_in">rename</span>)<br><br><span class="hljs-comment">&quot; Formatting selected code</span><br><span class="hljs-keyword">xmap</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">f</span>  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-format-selected)<br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">f</span>  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-format-selected)<br><br><span class="hljs-keyword">augroup</span> mygroup<br>  autocmd!<br>  <span class="hljs-comment">&quot; Setup formatexpr specified filetype(s)</span><br>  <span class="hljs-keyword">autocmd</span> FileType typescript,json <span class="hljs-keyword">setl</span> formatexpr=CocAction(<span class="hljs-string">&#x27;formatSelected&#x27;</span>)<br>  <span class="hljs-comment">&quot; Update signature help on jump placeholder</span><br>  <span class="hljs-keyword">autocmd</span> User CocJumpPlaceholder <span class="hljs-keyword">call</span> CocActionAsync(<span class="hljs-string">&#x27;showSignatureHelp&#x27;</span>)<br><span class="hljs-keyword">augroup</span> end<br><br><span class="hljs-comment">&quot; Applying code actions to the selected code block</span><br><span class="hljs-comment">&quot; Example: `&lt;leader&gt;aap` for current paragraph</span><br><span class="hljs-keyword">xmap</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">a</span>  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-codeaction-selected)<br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">a</span>  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-codeaction-selected)<br><br><span class="hljs-comment">&quot; Remap keys for applying code actions at the cursor position</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;leader&gt;</span>ac  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-codeaction-<span class="hljs-built_in">cursor</span>)<br><span class="hljs-comment">&quot; Remap keys for apply code actions affect whole buffer</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">as</span>  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-codeaction-<span class="hljs-keyword">source</span>)<br><span class="hljs-comment">&quot; Apply the most preferred quickfix action to fix diagnostic on the current line</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;leader&gt;</span>qf  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-<span class="hljs-keyword">fix</span>-current)<br><br><span class="hljs-comment">&quot; Remap keys for applying refactor code actions</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> <span class="hljs-symbol">&lt;leader&gt;</span>re <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-codeaction-refactor)<br><span class="hljs-keyword">xmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> <span class="hljs-symbol">&lt;leader&gt;</span>r  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-codeaction-refactor-selected)<br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> <span class="hljs-symbol">&lt;leader&gt;</span>r  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-codeaction-refactor-selected)<br><br><span class="hljs-comment">&quot; Run the Code Lens action on the current line</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">cl</span>  <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-codelens-action)<br><br><span class="hljs-comment">&quot; Map function and class text objects</span><br><span class="hljs-comment">&quot; <span class="hljs-doctag">NOTE:</span> Requires &#x27;textDocument.documentSymbol&#x27; support from the language server</span><br><span class="hljs-keyword">xmap</span> <span class="hljs-keyword">if</span> <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-funcobj-i)<br><span class="hljs-keyword">omap</span> <span class="hljs-keyword">if</span> <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-funcobj-i)<br><span class="hljs-keyword">xmap</span> af <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-funcobj-<span class="hljs-keyword">a</span>)<br><span class="hljs-keyword">omap</span> af <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-funcobj-<span class="hljs-keyword">a</span>)<br><span class="hljs-keyword">xmap</span> ic <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-classobj-i)<br><span class="hljs-keyword">omap</span> ic <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-classobj-i)<br><span class="hljs-keyword">xmap</span> ac <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-classobj-<span class="hljs-keyword">a</span>)<br><span class="hljs-keyword">omap</span> ac <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-classobj-<span class="hljs-keyword">a</span>)<br><br><span class="hljs-comment">&quot; Remap &lt;C-f&gt; and &lt;C-b&gt; to scroll float windows/popups</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">has</span>(<span class="hljs-string">&#x27;nvim-0.4.0&#x27;</span>) || <span class="hljs-built_in">has</span>(<span class="hljs-string">&#x27;patch-8.2.0750&#x27;</span>)<br>  <span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;C-f&gt;</span> coc#float#has_scroll() ? coc#float#scroll(<span class="hljs-number">1</span>) : <span class="hljs-string">&quot;\&lt;C-f&gt;&quot;</span><br>  <span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;C-b&gt;</span> coc#float#has_scroll() ? coc#float#scroll(<span class="hljs-number">0</span>) : <span class="hljs-string">&quot;\&lt;C-b&gt;&quot;</span><br>  <span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;C-f&gt;</span> coc#float#has_scroll() ? <span class="hljs-string">&quot;\&lt;c-r&gt;=coc#float#scroll(1)\&lt;cr&gt;&quot;</span> : <span class="hljs-string">&quot;\&lt;Right&gt;&quot;</span><br>  <span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;C-b&gt;</span> coc#float#has_scroll() ? <span class="hljs-string">&quot;\&lt;c-r&gt;=coc#float#scroll(0)\&lt;cr&gt;&quot;</span> : <span class="hljs-string">&quot;\&lt;Left&gt;&quot;</span><br>  <span class="hljs-keyword">vnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;C-f&gt;</span> coc#float#has_scroll() ? coc#float#scroll(<span class="hljs-number">1</span>) : <span class="hljs-string">&quot;\&lt;C-f&gt;&quot;</span><br>  <span class="hljs-keyword">vnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span><span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;C-b&gt;</span> coc#float#has_scroll() ? coc#float#scroll(<span class="hljs-number">0</span>) : <span class="hljs-string">&quot;\&lt;C-b&gt;&quot;</span><br><span class="hljs-keyword">endif</span><br><br><span class="hljs-comment">&quot; Use CTRL-S for selections ranges</span><br><span class="hljs-comment">&quot; Requires &#x27;textDocument/selectionRange&#x27; support of language server</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> <span class="hljs-symbol">&lt;C-s&gt;</span> <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-<span class="hljs-built_in">range</span>-select)<br><span class="hljs-keyword">xmap</span> <span class="hljs-symbol">&lt;silent&gt;</span> <span class="hljs-symbol">&lt;C-s&gt;</span> <span class="hljs-symbol">&lt;Plug&gt;</span>(coc-<span class="hljs-built_in">range</span>-select)<br><br><span class="hljs-comment">&quot; Add `:Format` command to format current buffer</span><br>command! -nargs=<span class="hljs-number">0</span> Format :<span class="hljs-keyword">call</span> CocActionAsync(<span class="hljs-string">&#x27;format&#x27;</span>)<br><br><span class="hljs-comment">&quot; Add `:Fold` command to fold current buffer</span><br>command! -nargs=? Fold :<span class="hljs-keyword">call</span>     CocAction(<span class="hljs-string">&#x27;fold&#x27;</span>, <span class="hljs-symbol">&lt;f-args&gt;</span>)<br><br><span class="hljs-comment">&quot; Add `:OR` command for organize imports of the current buffer</span><br>command! -nargs=<span class="hljs-number">0</span> OR   :<span class="hljs-keyword">call</span>     CocActionAsync(<span class="hljs-string">&#x27;runCommand&#x27;</span>, <span class="hljs-string">&#x27;editor.action.organizeImport&#x27;</span>)<br><br><span class="hljs-comment">&quot; Add (Neo)Vim&#x27;s native statusline support</span><br><span class="hljs-comment">&quot; <span class="hljs-doctag">NOTE:</span> Please see `:h coc-status` for integrations with external plugins that</span><br><span class="hljs-comment">&quot; provide custom statusline: lightline.vim, vim-airline</span><br><span class="hljs-keyword">set</span> statusline^=%&#123;coc#status()&#125;%&#123;<span class="hljs-built_in">get</span>(<span class="hljs-keyword">b</span>:,<span class="hljs-string">&#x27;coc_current_function&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)&#125;<br><br><span class="hljs-comment">&quot; Mappings for CoCList</span><br><span class="hljs-comment">&quot; Show all diagnostics</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span> <span class="hljs-symbol">&lt;space&gt;</span><span class="hljs-keyword">a</span>  :<span class="hljs-symbol">&lt;C-u&gt;</span>CocList diagnostics<span class="hljs-symbol">&lt;cr&gt;</span><br><span class="hljs-comment">&quot; Manage extensions</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span> <span class="hljs-symbol">&lt;space&gt;</span><span class="hljs-keyword">e</span>  :<span class="hljs-symbol">&lt;C-u&gt;</span>CocList extensions<span class="hljs-symbol">&lt;cr&gt;</span><br><span class="hljs-comment">&quot; Show commands</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span> <span class="hljs-symbol">&lt;space&gt;</span><span class="hljs-keyword">c</span>  :<span class="hljs-symbol">&lt;C-u&gt;</span>CocList commands<span class="hljs-symbol">&lt;cr&gt;</span><br><span class="hljs-comment">&quot; Find symbol of current document</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span> <span class="hljs-symbol">&lt;space&gt;</span><span class="hljs-keyword">o</span>  :<span class="hljs-symbol">&lt;C-u&gt;</span>CocList outline<span class="hljs-symbol">&lt;cr&gt;</span><br><span class="hljs-comment">&quot; Search workspace symbols</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span> <span class="hljs-symbol">&lt;space&gt;</span>s  :<span class="hljs-symbol">&lt;C-u&gt;</span>CocList -I symbols<span class="hljs-symbol">&lt;cr&gt;</span><br><span class="hljs-comment">&quot; Do default action for next item</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span> <span class="hljs-symbol">&lt;space&gt;</span><span class="hljs-keyword">j</span>  :<span class="hljs-symbol">&lt;C-u&gt;</span>CocNext<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-comment">&quot; Do default action for previous item</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span> <span class="hljs-symbol">&lt;space&gt;</span><span class="hljs-keyword">k</span>  :<span class="hljs-symbol">&lt;C-u&gt;</span>CocPrev<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-comment">&quot; Resume latest coc list</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;nowait&gt;</span> <span class="hljs-symbol">&lt;space&gt;</span><span class="hljs-keyword">p</span>  :<span class="hljs-symbol">&lt;C-u&gt;</span>CocListResume<span class="hljs-symbol">&lt;CR&gt;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>个性化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Port-forwarding | CentOS 端口转发</title>
    <link href="/2023/05/24/Port-forwarding-linux-%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <url>/2023/05/24/Port-forwarding-linux-%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h1 id="Port-Forwarding"><a href="#Port-Forwarding" class="headerlink" title="Port Forwarding"></a>Port Forwarding</h1><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><p>CentOS uses <strong>firewalld</strong> to implement the function of <strong>port forwarding</strong>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># First of all, we need to enable ip_forward</span><br><span class="hljs-built_in">echo</span> net.ipv4.ip_forward=1&gt;&gt;/etc/sysctl.conf<br><br><span class="hljs-comment"># Check if the mode is enabled</span><br>sysctl -p<br><br><span class="hljs-comment"># Check the status of firewalld</span><br>systemctl status firewalld<br><br><span class="hljs-comment"># Enable firewalld if firewalld isn&#x27;t running</span><br>systemctl start firewalld<br><br><span class="hljs-comment"># $protocal: tcp, udp</span><br><span class="hljs-comment"># Listening $port_from</span><br>firewall-cmd --zone=public --add-port=<span class="hljs-variable">$port_from</span>/<span class="hljs-variable">$protocal</span> --permanent<br><br><span class="hljs-comment"># Forward $port_from to local $port_to</span><br>firewall-cmd --add-forward-port=port=<span class="hljs-variable">$port_from</span>:proto=<span class="hljs-variable">$protocal</span>:toport=<span class="hljs-variable">$port_to</span> --permanent<br><br><span class="hljs-comment"># Forward $port_from to $ip:$port_to</span><br>firewall-cmd --add-forward-port=port=<span class="hljs-variable">$port_from</span>:proto=<span class="hljs-variable">$protocal</span>:toaddr=<span class="hljs-variable">$ip</span>:toport=<span class="hljs-variable">$port_to</span> --permanent<br><br><span class="hljs-comment"># Check whether IP masquerading is allowed</span><br>firewall-cmd --query-masquerade <br><span class="hljs-comment"># Allow IP masquerading</span><br>firewall-cmd --permanent --add-masquerade <br><span class="hljs-comment"># Prohibit IP masquerading</span><br>firewall-cmd --permanent --remove-masquerade<br><br><span class="hljs-comment"># Load new configuration</span><br>firewall-cmd --reload<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Install docker | 安装 docker</title>
    <link href="/2023/05/24/Install-docker-1/"/>
    <url>/2023/05/24/Install-docker-1/</url>
    
    <content type="html"><![CDATA[<h1 id="Install-Docker"><a href="#Install-Docker" class="headerlink" title="Install Docker"></a>Install Docker</h1><h2 id="Install-using-the-repository"><a href="#Install-using-the-repository" class="headerlink" title="Install using the repository"></a>Install using the repository</h2><h3 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Install the yum-utils package (which provides the yum-config-manager utility) and set up the repository.</span><br><br>sudo yum install -y yum-utils<br><br>sudo yum-config-manager \<br>    --add-repo \<br>    https://download.docker.com/linux/centos/docker-ce.repo<br><br>sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin<br><br><span class="hljs-comment"># This command installs Docker, but it doesn’t start Docker. It also creates a docker group, however, it doesn’t add any users to the group by default.</span><br></code></pre></td></tr></table></figure><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Set up the repository</span><br><br>sudo apt-get update<br><br>sudo apt-get install \<br>    ca-certificates \<br>    curl \<br>    gnupg \<br>    lsb-release<br><br><span class="hljs-comment"># Add Docker’s official GPG key</span><br><br>sudo <span class="hljs-built_in">mkdir</span> -m 0755 -p /etc/apt/keyrings<br><br>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg<br><br><span class="hljs-built_in">echo</span> \<br>  <span class="hljs-string">&quot;deb [arch=<span class="hljs-subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \</span><br><span class="hljs-string">  <span class="hljs-subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null<br><br><span class="hljs-comment"># Install</span><br><br>sudo <span class="hljs-built_in">chmod</span> a+r /etc/apt/keyrings/docker.gpg<br><br>sudo apt-get update<br><br>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin<br></code></pre></td></tr></table></figure><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p>Add user to group(docker)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gpasswd -a <span class="hljs-variable">$USER</span> docker <br>newgrp docker<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
